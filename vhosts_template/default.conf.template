map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

{% for server in virtual_servers%}{% for upstream in server.upstreams %}
    upstream {{ upstream.id }} { {% for container in upstream.containers %}
        server  {{ container.address }}:{{ container.port }};{% endfor %}
    }{% endfor %}
{% if server.secured %}
server{
        server_name {{ server.hostname }};
        listen {{ server.port }} ssl http2 ;
        access_log /var/log/nginx/access.log;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
        ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:!DSS';
        ssl_prefer_server_ciphers on;
        ssl_session_timeout 5m;
        ssl_session_cache shared:SSL:50m;
        ssl_session_tickets off;
        ssl_certificate /etc/ssl/certs/{{ server.ssl_file }}.crt;
        ssl_certificate_key /etc/ssl/private/{{ server.ssl_file }}.key;
        ssl_stapling on;
        ssl_stapling_verify on;
        add_header Strict-Transport-Security "max-age=31536000" always;{% if server.is_redirect %}
            return 301 https://{{ server.full_redirect.hostname }}$request_uri;{% elif server.is_down %}
        return 503;{% else %}{% for location in server.locations.values() %}
        location {{ location.name }} { {% if location.extras.security %}
            auth_basic "Basic Authorization Enabled ";
            auth_basic_user_file {{ location.basic_auth_file }};{% endif %} {% if location.upstream %}
            proxy_pass {{ location.container.scheme }}://{{ location.upstream }}{{location.container.path}};{% else %}
            proxy_pass {{location.container.scheme }}://{{ location.container.address }}:{{ location.container.port }}{{ location.container.path }};{% endif %}{% if location.name != '/' %}
            proxy_redirect $scheme://$http_host{% if location.container.path!="/" %}{{ location.container.path }}{% endif%} $scheme://$http_host{{location.name}};{% endif %} {% if location.websocket  and location.http %}
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;{% elif location.websocket %}
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_read_timeout  7d;
            proxy_send_timeout 7d;{% endif %}
        }{% endfor %} {% endif %}
    
}{% else %}
server{
        listen {{ server.port }};
        server_name {{ server.hostname }};{% for location in server.locations.values() %}
        location {{ location.name }} { {% if location.upstream %}
            proxy_pass {{ location.container.scheme }}://{{ location.upstream }}{{location.container.path}};{% else %}
            proxy_pass {{location.container.scheme }}://{{ location.container.address }}:{{ location.container.port }}{{ location.container.path }};{% endif %}{% if location.name != '/' %}
            proxy_redirect $scheme://$http_host{% if location.container.path!="/" %}{{ location.container.path }}{% endif%} $scheme://$http_host{{location.name}};{% endif %}  {% if location.websocket and location.http %}
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;{% elif location.websocket %}
            proxy_http_version 1.1;
            proxy_read_timeout  7d;
            proxy_send_timeout 7d;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";{% endif %}
        }{% endfor %}
        location /.well-known/acme-challenge/ {
            alias {{ challenge_dir }};
            try_files $uri =404;
        }
 }{% endif %}{% if server.ssl_redirect %}
server {
        listen 80;
        server_name {{ server.hostname }};
        location /.well-known/acme-challenge/ {
            alias {{ challenge_dir }};
            try_files $uri =404;
        }
        location /{ {% if server.is_redirect %}
                return 301 https://{{ server.full_redirect.hostname }}$request_uri;{% else %}
                return 301 https://$host$request_uri;{% endif %}
        }
}{% endif %}{% endfor %}

server{
        listen 80 default_server;
        server_name _ ;
        location /.well-known/acme-challenge/ {
            alias {{ challenge_dir }};
            try_files $uri =404;
        }
        location / {
            return 503;
        }
}
